buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            // GTNH ForgeGradle Fork
            name = "GTNH Maven"
            url = "http://jenkins.usrv.eu:8081/nexus/content/groups/public/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2.13'
    }
}

plugins {
    id 'maven-publish'
}

apply plugin: 'forge'

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

version = "1.7.10R3.1.4.1"
group = "cofh"
archivesBaseName = "CoFHCore"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    replace "@VERSION@", project.version
    replaceIn "CoFHCore.java"
}

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    maven {
        url "https://chickenbones.net/maven/"
    }
}

dependencies {
    compile "curse.maven:cofh-lib-220333:2388748"
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
}

jar {
    manifest {
        attributes.put("FMLCorePluginContainsFMLMod", "true")
        attributes.put("FMLCorePlugin", "cofh.asm.LoadingPlugin")
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

publishing.publications {
    mavenJava(MavenPublication) {
        groupId = project.group
        artifactId = archivesBaseName
        version = project.version

        from components.java
    }
}
